generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model steam_to_twitch {
  id         BigInt    @default(autoincrement())
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  steamid    String    @db.VarChar
  accountid  String    @db.VarChar
  channel    String    @db.VarChar
  added_by   String    @db.VarChar

  @@id([steamid, channel], map: "steam to twitch channel_pkey")
}

model twitch_tokens {
  id           BigInt    @id @default(autoincrement())
  created_at   DateTime? @default(now()) @db.Timestamptz(6)
  refreshToken String?   @db.VarChar
  accessToken  String?
}

model Account {
  id                String   @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  createdAt         DateTime @default(now()) @map("created_at")
  updatedAt         DateTime @default(now()) @map("updated_at")

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime

  @@map("sessions")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime  @default(now()) @map("updated_at")

  Setting Setting[]

  @@map("users")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verification_tokens")
}

model Setting {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @default(now()) @map(name: "updated_at")
  key       String
  value     Json?
  userId    String

  user User @relation(fields: [userId], references: [id])

  @@unique([key, userId])
  @@map("settings")
}
